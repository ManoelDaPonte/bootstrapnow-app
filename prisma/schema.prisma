datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model BusinessPlanProgress {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    progress  Json // Stocke le progrès de chaque section
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MonthlyProjectionAnalysis {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @unique
    data        Json
    qaResponses Json     @default("{}")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model YearlyProjectionAnalysis {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MarketTrendsAnalysis {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CompetitorsAnalysis {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model StartupExpensesAnalysis {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @unique
    data        Json
    qaResponses Json     @default("{}")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model SwotAnalysis {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @unique
    data        Json
    qaResponses Json     @default("{}")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model AnsoffAnalysis {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @unique
    data        Json
    qaResponses Json     @default("{}")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model PestelAnalysis {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @unique
    data        Json
    qaResponses Json     @default("{}")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model CanvasAnalysis {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @unique
    data        Json
    qaResponses Json     @default("{}")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model MarketingMixAnalysis {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @unique
    data        Json
    qaResponses Json     @default("{}")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model SkillMatrix {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @unique
    data        Json // Stockera les personnes et les domaines
    qaResponses Json     @default("{}")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model ValuePropositionAnalysis {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @unique
    data        Json
    qaResponses Json     @default("{}")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model FunnelChartAnalysis {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @unique
    data        Json
    qaResponses Json     @default("{}")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model GeneratedBusinessPlan {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    content   String   @db.Text // Pour stocker le texte long
    prompt    String   @db.Text // Pour stocker le prompt utilisé
    status    String   @default("draft") // draft, published, archived
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id                        String                     @id @default(cuid())
    auth0Id                   String                     @unique
    email                     String                     @unique
    swotAnalysis              SwotAnalysis?
    ansoffAnalysis            AnsoffAnalysis?
    pestelAnalysis            PestelAnalysis?
    canvasAnalysis            CanvasAnalysis?
    marketingMixAnalysis      MarketingMixAnalysis?
    skillMatrix               SkillMatrix?
    valuePropositionAnalysis  ValuePropositionAnalysis?
    funnelChartAnalysis       FunnelChartAnalysis?
    monthlyProjectionAnalysis MonthlyProjectionAnalysis?
    yearlyProjectionAnalysis  YearlyProjectionAnalysis?
    marketTrendsAnalysis      MarketTrendsAnalysis?
    competitorsAnalysis       CompetitorsAnalysis?
    startupExpensesAnalysis   StartupExpensesAnalysis?
    businessPlanProgress      BusinessPlanProgress?
    generatedBusinessPlan     GeneratedBusinessPlan[]
    createdAt                 DateTime                   @default(now())
    updatedAt                 DateTime                   @updatedAt
}

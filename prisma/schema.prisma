datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id                       String                    @id @default(cuid())
    auth0Id                  String                    @unique
    email                    String                    @unique
    swotAnalysis             SwotAnalysis?
    ansoffAnalysis           AnsoffAnalysis?
    pestelAnalysis           PestelAnalysis?
    canvasAnalysis           CanvasAnalysis?
    marketingMixAnalysis     MarketingMixAnalysis?
    skillMatrix              SkillMatrix?
    valuePropositionAnalysis ValuePropositionAnalysis?
    funnelChartAnalysis      FunnelChartAnalysis?
    generatedBusinessPlan    GeneratedBusinessPlan[]
    createdAt                DateTime                  @default(now())
    updatedAt                DateTime                  @updatedAt
}

model SwotAnalysis {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model AnsoffAnalysis {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model PestelAnalysis {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CanvasAnalysis {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MarketingMixAnalysis {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model SkillMatrix {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json // Stockera les personnes et les domaines
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model ValuePropositionAnalysis {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model FunnelChartAnalysis {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    data      Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model GeneratedBusinessPlan {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    content   String   @db.Text // Pour stocker le texte long
    prompt    String   @db.Text // Pour stocker le prompt utilis√©
    status    String   @default("draft") // draft, published, archived
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
